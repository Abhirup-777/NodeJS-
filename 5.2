const express = require('express');
const mongoose = require('mongoose');
const app = express();
app.use(express.json());

// Connect MongoDB
mongoose.connect('mongodb://localhost:27017/studentDB', {
    useNewUrlParser: true,
    useUnifiedTopology: true
});

// Model
const studentSchema = new mongoose.Schema({
    name: String,
    age: Number,
    department: String
});
const Student = mongoose.model('Student', studentSchema);

// Controller
const studentController = {
    create: async (req, res) => {
        const student = new Student(req.body);
        await student.save();
        res.send(student);
    },
    getAll: async (req, res) => {
        const students = await Student.find();
        res.send(students);
    },
    getById: async (req, res) => {
        const student = await Student.findById(req.params.id);
        res.send(student);
    },
    update: async (req, res) => {
        const student = await Student.findByIdAndUpdate(req.params.id, req.body, { new: true });
        res.send(student);
    },
    delete: async (req, res) => {
        await Student.findByIdAndDelete(req.params.id);
        res.send({ message: 'Student deleted' });
    }
};

// Routes
app.post('/students', studentController.create);
app.get('/students', studentController.getAll);
app.get('/students/:id', studentController.getById);
app.put('/students/:id', studentController.update);
app.delete('/students/:id', studentController.delete);

// Start Server
app.listen(3000, () => console.log("Server running on port 3000"));
